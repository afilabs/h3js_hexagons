[{"/Users/afian/Documents/node_apps/h3js-learning/src/App.js":"1","/Users/afian/Documents/node_apps/h3js-learning/src/reportWebVitals.js":"2","/Users/afian/Documents/node_apps/h3js-learning/src/index.tsx":"3","/Users/afian/Documents/node_apps/h3js-learning/src/components/MapBoxSingleHex.jsx":"4","/Users/afian/Documents/node_apps/h3js-learning/src/components/MapBoxMultipleHex.jsx":"5","/Users/afian/Documents/node_apps/h3js-learning/src/components/MapBoxMultipleHexDemand.jsx":"6","/Users/afian/Documents/node_apps/h3js_hexagons/src/index.jsx":"7","/Users/afian/Documents/node_apps/h3js_hexagons/src/reportWebVitals.js":"8","/Users/afian/Documents/node_apps/h3js_hexagons/src/App.js":"9","/Users/afian/Documents/node_apps/h3js_hexagons/src/components/MapBoxSingleHex.jsx":"10"},{"size":533,"mtime":1687935374406,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1687934739482,"results":"13","hashOfConfig":"12"},{"size":403,"mtime":1688877545908,"results":"14","hashOfConfig":"12"},{"size":1809,"mtime":1688886711540,"results":"15","hashOfConfig":"12"},{"size":3272,"mtime":1688324921175,"results":"16","hashOfConfig":"12"},{"size":5172,"mtime":1688625981000,"results":"17","hashOfConfig":"12"},{"size":388,"mtime":1689053995893,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1687934739482,"results":"20","hashOfConfig":"19"},{"size":533,"mtime":1689055364816,"results":"21","hashOfConfig":"19"},{"size":1571,"mtime":1689196286521,"results":"22","hashOfConfig":"19"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1b5dq04",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1x4nw8g",{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/afian/Documents/node_apps/h3js-learning/src/App.js",[],[],[],"/Users/afian/Documents/node_apps/h3js-learning/src/reportWebVitals.js",[],[],[],"/Users/afian/Documents/node_apps/h3js-learning/src/index.tsx",["57"],[],"/Users/afian/Documents/node_apps/h3js-learning/src/components/MapBoxSingleHex.jsx",["58","59","60","61"],[],"/Users/afian/Documents/node_apps/h3js-learning/src/components/MapBoxMultipleHex.jsx",["62","63","64","65"],[],"import \"mapbox-gl/dist/mapbox-gl.css\";\nimport Map, { Layer, Source, MapRef, Marker } from \"react-map-gl\";\nimport React, {useRef, useState } from \"react\";\nimport { cellToBoundary } from \"h3-js\";\nimport Papa from \"papaparse\";\n\n\nfunction MapBox() {\n\n  const [arr, setArr] = useState([]);\n\n  const hexindex7Id = \"8744a1024ffffff\";\n\n  const onLoad = () => {\n    // console.log(\"onLoad() called\");\n    getData();\n  };\n  \n\n  async function getData() {\n    const response = await fetch(\"./assets/singapore_hexagons.csv\");\n\n    // console.log(response);\n\n    if (response) {\n      const reader = response?.body?.getReader();\n      const result = await reader?.read(); // raw array\n\n\n\n      const decoder = new TextDecoder(\"utf-8\");\n      const csv = decoder.decode(result?.value); // the csv text\n      const results = Papa.parse(csv, { header: true }); // object with { data, errors, meta }\n\n      // console.log(results);\n\n      const rows = results.data; // array of objects\n      // console.log(rows);\n      const rs = rows.map((row) => {\n        const style = getStyle(row);\n        return {\n          type: \"Feature\",\n          properties: {\n            color: style.color,\n            opacity: style.opacity,\n            id: row.hexindex7,\n          },\n          geometry: {\n            type: \"Polygon\",\n            coordinates: [cellToBoundary(row.hexindex7, true)],\n          },\n        };\n      });\n      setArr(rs);\n\n      // console.log(rs);\n    }\n  }\n\n  const getStyle = (row) => {\n    const prediction = Math.floor(Math.random() * 10);\n\n    if (Number(prediction) < 2) {\n      return {\n        color: '#FEDD87',\n        opacity: 0.4,\n      }\n    }\n    if (Number(prediction) < 5) {\n      return {\n        color: \"#FC9653\",\n        opacity: 0.5,\n      };\n    }\n    if (Number(prediction) < 7) {\n      return {\n        color: \"#F77645\",\n        opacity: 0.6\n      }\n    }\n    return {\n      color: \"#E14C48\",\n      opacity: 0.7\n    };\n  };\n\n  // console.log(cellToBoundary(hexindex7Id, true));\n  console.log(\"arr:\");\n  console.log(arr);\n\n\n\n  return (\n      \n      <div>\n        <div className=\"map\">\n          <Map\n            initialViewState={{\n              latitude: 1.290270,\n              longitude: 103.851959,\n              zoom: 10,\n              bearing: 0,\n              pitch: 0,\n            }}\n            mapStyle=\"mapbox://styles/mapbox/light-v9\"\n            mapboxAccessToken=\"pk.eyJ1IjoidGhlcHJvZiIsImEiOiJja3Q5amlqaXgxNjUwMm5wY3NrdmplbzVxIn0.C3zhU7lekidOJmARhNyBdw\"\n            style={{\n              height: \"100vh\",\n              width: \"100vw\",\n            }}\n            onLoad={onLoad}\n          >\n            <Source\n              type=\"geojson\"\n              data={{\n                type: \"FeatureCollection\",\n                features: arr\n              }}\n            >\n              <Layer\n                {...{\n                  id: \"polyline-layer\",\n                  type: \"fill\",\n                  paint: {\n                    'fill-outline-color': 'white',\n                    \"fill-color\": [\"get\", \"color\"],\n                    \"fill-opacity\": [\"get\", \"opacity\"],\n                  },\n                }}\n              />\n            </Source>\n            \n\n\n          </Map>\n        </div> \n      </div>\n  );\n\n};\n\nexport default MapBox;","/Users/afian/Documents/node_apps/h3js-learning/src/components/MapBoxMultipleHexDemand.jsx",["66","67","68"],[],"import \"mapbox-gl/dist/mapbox-gl.css\";\nimport Map, { Layer, Source, MapRef, Marker } from \"react-map-gl\";\nimport React, {useRef, useState } from \"react\";\nimport { latLngToCell, cellToBoundary } from \"h3-js\";\nimport Papa from \"papaparse\";\n\nconst singaporeHexagonsObj = require('../data/singapore_hexagons.json');\nconst singaporeHexagonsArr = [];\n\n// Convert hexagons object to an array for easier data management\nfunction initHexagonArr() {\n  for (const hexagon in singaporeHexagonsObj) {\n    singaporeHexagonsArr.push({\n      hexindex7: hexagon\n    });\n  }\n}\n\n\n\n// Count how many bookings are in each hexagon\nfunction updateHexagonBookingCounts(bookings) {\n  \n  bookings.forEach((element) => {\n\n    // console.log(element);\n\n    if (element.latitude != null && element.longitude != null) {\n      const bookingHexindex7 = latLngToCell(parseFloat(element.latitude), parseFloat(element.longitude), 7);\n\n      // If the booking falls in a specific hexagon, increment the booking count\n      if (singaporeHexagonsObj.hasOwnProperty(bookingHexindex7)) {\n        singaporeHexagonsObj[bookingHexindex7]++;\n      }\n\n    } else {\n      console.log(\"missing data: \" + element.taxi_id);\n    }\n  });\n}\n\nfunction printBookingCounts() {\n  for (const hexagon in singaporeHexagonsObj) {\n    console.log(singaporeHexagonsObj[hexagon]);\n  }\n}\n\n\nfunction MapBox() {\n\n  const [arr, setArr] = useState([]);\n\n  const onLoad = () => {\n    // console.log(\"onLoad() called\");\n    initHexagonArr();\n    getData();\n    \n  };\n  \n\n  async function getData() {\n    const response = await fetch(\"./assets/booking_data.csv\");\n\n    // console.log(response);\n\n    if (response) {\n      const reader = response?.body?.getReader();\n      const result = await reader?.read(); // raw array\n\n\n\n      const decoder = new TextDecoder(\"utf-8\");\n      const csv = decoder.decode(result?.value); // the csv text\n      const results = Papa.parse(csv, { header: true }); // object with { data, errors, meta }\n\n      // console.log(results);\n\n      const bookingData = results.data; // array of objects\n\n      // Iterate through booking data and check which hexagon it falls in and increment the booking count for that hexagon\n      updateHexagonBookingCounts(bookingData);\n      printBookingCounts();\n\n      // console.log(singaporeHexagonsObj);\n\n      // console.log(rows);\n      // console.log(singaporeHexagonsArr);\n      const rs = singaporeHexagonsArr.map((row) => {\n        const style = getStyle(row);\n        return {\n          type: \"Feature\",\n          properties: {\n            color: style.color,\n            opacity: style.opacity,\n            id: row.hexindex7,\n          },\n          geometry: {\n            type: \"Polygon\",\n            coordinates: [cellToBoundary(row.hexindex7, true)],\n          },\n        };\n      });\n      setArr(rs);\n\n      // console.log(rs);\n    }\n  }\n\n  const getStyle = (row) => {\n\n    \n    // console.log(row);\n\n    const styles = [\n      {\n        color: '#FEDD87',\n        opacity: 0.2\n      },\n      {\n        color: '#FED976',\n        opacity: 0.4\n      },\n      {\n        color: \"#FC9653\",\n        opacity: 0.6,\n      },\n      {\n        color: \"#F77645\",\n        opacity: 0.7\n      },\n      {\n        color: \"#E14C48\",\n        opacity: 0.8\n      }\n    ];\n\n    const hexindex7 = row.hexindex7;\n    const hexagonBookingCount = singaporeHexagonsObj[hexindex7];\n    // const hexagonBookingCount = Math.floor(Math.random() * 10);\n\n\n    if (Number(hexagonBookingCount) === 0) {\n      return {opacity: 0};\n    }\n\n    if (Number(hexagonBookingCount) < 250) {\n      return styles[0];\n    }\n    if (Number(hexagonBookingCount) < 500) {\n      return styles[1];\n    }\n    if (Number(hexagonBookingCount) < 1000) {\n      return styles[2];\n    }\n    if (Number(hexagonBookingCount) < 1500) {\n      return styles[3];\n    }\n    return styles[4];\n  };\n\n  // console.log(cellToBoundary(hexindex7Id, true));\n  // console.log(\"arr:\");\n  // console.log(arr);\n\n\n\n  return (\n      \n      <div>\n        <div className=\"map\">\n          <Map\n            initialViewState={{\n              latitude: 1.290270,\n              longitude: 103.851959,\n              zoom: 10,\n              bearing: 0,\n              pitch: 0,\n            }}\n            mapStyle=\"mapbox://styles/mapbox/light-v9\"\n            mapboxAccessToken=\"pk.eyJ1IjoidGhlcHJvZiIsImEiOiJja3Q5amlqaXgxNjUwMm5wY3NrdmplbzVxIn0.C3zhU7lekidOJmARhNyBdw\"\n            style={{\n              height: \"100vh\",\n              width: \"100vw\",\n            }}\n            onLoad={onLoad}\n          >\n            <Source\n              type=\"geojson\"\n              data={{\n                type: \"FeatureCollection\",\n                features: arr\n              }}\n            >\n              <Layer\n                {...{\n                  id: \"polyline-layer\",\n                  type: \"fill\",\n                  paint: {\n                    'fill-outline-color': 'white',\n                    \"fill-color\": [\"get\", \"color\"],\n                    \"fill-opacity\": [\"get\", \"opacity\"],\n                  },\n                }}\n              />\n            </Source>\n            \n\n\n          </Map>\n        </div> \n      </div>\n  );\n\n};\n\nexport default MapBox;","/Users/afian/Documents/node_apps/h3js_hexagons/src/index.jsx",["69"],[],"/Users/afian/Documents/node_apps/h3js_hexagons/src/reportWebVitals.js",[],[],"/Users/afian/Documents/node_apps/h3js_hexagons/src/App.js",[],[],"/Users/afian/Documents/node_apps/h3js_hexagons/src/components/MapBoxSingleHex.jsx",["70","71","72","73"],[],{"ruleId":"74","severity":1,"message":"75","line":4,"column":8,"nodeType":"76","messageId":"77","endLine":4,"endColumn":11},{"ruleId":"78","severity":1,"message":"79","line":2,"column":30,"nodeType":"76","messageId":"77","endLine":2,"endColumn":36},{"ruleId":"78","severity":1,"message":"80","line":2,"column":38,"nodeType":"76","messageId":"77","endLine":2,"endColumn":44},{"ruleId":"78","severity":1,"message":"81","line":3,"column":16,"nodeType":"76","messageId":"77","endLine":3,"endColumn":22},{"ruleId":"78","severity":1,"message":"82","line":3,"column":24,"nodeType":"76","messageId":"77","endLine":3,"endColumn":32},{"ruleId":"78","severity":1,"message":"79","line":2,"column":30,"nodeType":"76","messageId":"77","endLine":2,"endColumn":36},{"ruleId":"78","severity":1,"message":"80","line":2,"column":38,"nodeType":"76","messageId":"77","endLine":2,"endColumn":44},{"ruleId":"78","severity":1,"message":"81","line":3,"column":16,"nodeType":"76","messageId":"77","endLine":3,"endColumn":22},{"ruleId":"78","severity":1,"message":"83","line":12,"column":9,"nodeType":"76","messageId":"77","endLine":12,"endColumn":20},{"ruleId":"78","severity":1,"message":"79","line":2,"column":30,"nodeType":"76","messageId":"77","endLine":2,"endColumn":36},{"ruleId":"78","severity":1,"message":"80","line":2,"column":38,"nodeType":"76","messageId":"77","endLine":2,"endColumn":44},{"ruleId":"78","severity":1,"message":"81","line":3,"column":16,"nodeType":"76","messageId":"77","endLine":3,"endColumn":22},{"ruleId":"78","severity":1,"message":"75","line":4,"column":8,"nodeType":"76","messageId":"77","endLine":4,"endColumn":11},{"ruleId":"78","severity":1,"message":"79","line":2,"column":30,"nodeType":"76","messageId":"77","endLine":2,"endColumn":36},{"ruleId":"78","severity":1,"message":"80","line":2,"column":38,"nodeType":"76","messageId":"77","endLine":2,"endColumn":44},{"ruleId":"78","severity":1,"message":"81","line":3,"column":16,"nodeType":"76","messageId":"77","endLine":3,"endColumn":22},{"ruleId":"78","severity":1,"message":"82","line":3,"column":24,"nodeType":"76","messageId":"77","endLine":3,"endColumn":32},"@typescript-eslint/no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-unused-vars","'MapRef' is defined but never used.","'Marker' is defined but never used.","'useRef' is defined but never used.","'useState' is defined but never used.","'hexindex7Id' is assigned a value but never used."]