{"ast":null,"code":"/**\n * Make a copy of a transform\n * @param tr\n */\nexport function cloneTransform(tr) {\n  const newTransform = tr.clone();\n  // Work around mapbox bug - this value is not assigned in clone(), only in resize()\n  newTransform.pixelsToGLUnits = tr.pixelsToGLUnits;\n  return newTransform;\n}\n/**\n * Capture a transform's current state\n * @param transform\n * @returns descriptor of the view state\n */\nexport function transformToViewState(tr) {\n  return {\n    longitude: tr.center.lng,\n    latitude: tr.center.lat,\n    zoom: tr.zoom,\n    pitch: tr.pitch,\n    bearing: tr.bearing,\n    padding: tr.padding\n  };\n}\n/* eslint-disable complexity */\n/**\n * Mutate a transform to match the given view state\n * @param transform\n * @param viewState\n * @returns true if the transform has changed\n */\nexport function applyViewStateToTransform(tr, props) {\n  const v = props.viewState || props;\n  let changed = false;\n  if ('longitude' in v && 'latitude' in v) {\n    const center = tr.center;\n    // @ts-ignore\n    tr.center = new center.constructor(v.longitude, v.latitude);\n    changed = changed || center !== tr.center;\n  }\n  if ('zoom' in v) {\n    const zoom = tr.zoom;\n    tr.zoom = v.zoom;\n    changed = changed || zoom !== tr.zoom;\n  }\n  if ('bearing' in v) {\n    const bearing = tr.bearing;\n    tr.bearing = v.bearing;\n    changed = changed || bearing !== tr.bearing;\n  }\n  if ('pitch' in v) {\n    const pitch = tr.pitch;\n    tr.pitch = v.pitch;\n    changed = changed || pitch !== tr.pitch;\n  }\n  if (v.padding && !tr.isPaddingEqual(v.padding)) {\n    changed = true;\n    tr.padding = v.padding;\n  }\n  return changed;\n}","map":{"version":3,"names":["cloneTransform","tr","newTransform","clone","pixelsToGLUnits","transformToViewState","longitude","center","lng","latitude","lat","zoom","pitch","bearing","padding","applyViewStateToTransform","props","v","viewState","changed","constructor","isPaddingEqual"],"sources":["/Users/afian/Documents/node_apps/h3js_hexagons/node_modules/react-map-gl/src/utils/transform.ts"],"sourcesContent":["import type {MapboxProps} from '../mapbox/mapbox';\nimport type {Transform, ViewState} from '../types';\n\n/**\n * Make a copy of a transform\n * @param tr\n */\nexport function cloneTransform(tr: Transform): Transform {\n  const newTransform = tr.clone();\n  // Work around mapbox bug - this value is not assigned in clone(), only in resize()\n  newTransform.pixelsToGLUnits = tr.pixelsToGLUnits;\n  return newTransform;\n}\n\n/**\n * Capture a transform's current state\n * @param transform\n * @returns descriptor of the view state\n */\nexport function transformToViewState(tr: Transform): ViewState {\n  return {\n    longitude: tr.center.lng,\n    latitude: tr.center.lat,\n    zoom: tr.zoom,\n    pitch: tr.pitch,\n    bearing: tr.bearing,\n    padding: tr.padding\n  };\n}\n\n/* eslint-disable complexity */\n/**\n * Mutate a transform to match the given view state\n * @param transform\n * @param viewState\n * @returns true if the transform has changed\n */\nexport function applyViewStateToTransform(tr: Transform, props: MapboxProps): boolean {\n  const v: Partial<ViewState> = props.viewState || props;\n  let changed = false;\n\n  if ('longitude' in v && 'latitude' in v) {\n    const center = tr.center;\n    // @ts-ignore\n    tr.center = new center.constructor(v.longitude, v.latitude);\n    changed = changed || center !== tr.center;\n  }\n  if ('zoom' in v) {\n    const zoom = tr.zoom;\n    tr.zoom = v.zoom;\n    changed = changed || zoom !== tr.zoom;\n  }\n  if ('bearing' in v) {\n    const bearing = tr.bearing;\n    tr.bearing = v.bearing;\n    changed = changed || bearing !== tr.bearing;\n  }\n  if ('pitch' in v) {\n    const pitch = tr.pitch;\n    tr.pitch = v.pitch;\n    changed = changed || pitch !== tr.pitch;\n  }\n  if (v.padding && !tr.isPaddingEqual(v.padding)) {\n    changed = true;\n    tr.padding = v.padding;\n  }\n  return changed;\n}\n"],"mappings":"AAGA;;;;AAIA,OAAM,SAAUA,cAAcA,CAACC,EAAa;EAC1C,MAAMC,YAAY,GAAGD,EAAE,CAACE,KAAK,EAAE;EAC/B;EACAD,YAAY,CAACE,eAAe,GAAGH,EAAE,CAACG,eAAe;EACjD,OAAOF,YAAY;AACrB;AAEA;;;;;AAKA,OAAM,SAAUG,oBAAoBA,CAACJ,EAAa;EAChD,OAAO;IACLK,SAAS,EAAEL,EAAE,CAACM,MAAM,CAACC,GAAG;IACxBC,QAAQ,EAAER,EAAE,CAACM,MAAM,CAACG,GAAG;IACvBC,IAAI,EAAEV,EAAE,CAACU,IAAI;IACbC,KAAK,EAAEX,EAAE,CAACW,KAAK;IACfC,OAAO,EAAEZ,EAAE,CAACY,OAAO;IACnBC,OAAO,EAAEb,EAAE,CAACa;GACb;AACH;AAEA;AACA;;;;;;AAMA,OAAM,SAAUC,yBAAyBA,CAACd,EAAa,EAAEe,KAAkB;EACzE,MAAMC,CAAC,GAAuBD,KAAK,CAACE,SAAS,IAAIF,KAAK;EACtD,IAAIG,OAAO,GAAG,KAAK;EAEnB,IAAI,WAAW,IAAIF,CAAC,IAAI,UAAU,IAAIA,CAAC,EAAE;IACvC,MAAMV,MAAM,GAAGN,EAAE,CAACM,MAAM;IACxB;IACAN,EAAE,CAACM,MAAM,GAAG,IAAIA,MAAM,CAACa,WAAW,CAACH,CAAC,CAACX,SAAS,EAAEW,CAAC,CAACR,QAAQ,CAAC;IAC3DU,OAAO,GAAGA,OAAO,IAAIZ,MAAM,KAAKN,EAAE,CAACM,MAAM;;EAE3C,IAAI,MAAM,IAAIU,CAAC,EAAE;IACf,MAAMN,IAAI,GAAGV,EAAE,CAACU,IAAI;IACpBV,EAAE,CAACU,IAAI,GAAGM,CAAC,CAACN,IAAI;IAChBQ,OAAO,GAAGA,OAAO,IAAIR,IAAI,KAAKV,EAAE,CAACU,IAAI;;EAEvC,IAAI,SAAS,IAAIM,CAAC,EAAE;IAClB,MAAMJ,OAAO,GAAGZ,EAAE,CAACY,OAAO;IAC1BZ,EAAE,CAACY,OAAO,GAAGI,CAAC,CAACJ,OAAO;IACtBM,OAAO,GAAGA,OAAO,IAAIN,OAAO,KAAKZ,EAAE,CAACY,OAAO;;EAE7C,IAAI,OAAO,IAAII,CAAC,EAAE;IAChB,MAAML,KAAK,GAAGX,EAAE,CAACW,KAAK;IACtBX,EAAE,CAACW,KAAK,GAAGK,CAAC,CAACL,KAAK;IAClBO,OAAO,GAAGA,OAAO,IAAIP,KAAK,KAAKX,EAAE,CAACW,KAAK;;EAEzC,IAAIK,CAAC,CAACH,OAAO,IAAI,CAACb,EAAE,CAACoB,cAAc,CAACJ,CAAC,CAACH,OAAO,CAAC,EAAE;IAC9CK,OAAO,GAAG,IAAI;IACdlB,EAAE,CAACa,OAAO,GAAGG,CAAC,CAACH,OAAO;;EAExB,OAAOK,OAAO;AAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}