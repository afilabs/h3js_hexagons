{"ast":null,"code":"import * as React from 'react';\nimport { useEffect } from 'react';\nimport { applyReactStyle } from '../utils/apply-react-style';\nimport useControl from './use-control';\nfunction AttributionControl(props) {\n  const ctrl = useControl(_ref => {\n    let {\n      mapLib\n    } = _ref;\n    return new mapLib.AttributionControl(props);\n  }, {\n    position: props.position\n  });\n  useEffect(() => {\n    // @ts-ignore\n    applyReactStyle(ctrl._container, props.style);\n  }, [props.style]);\n  return null;\n}\nexport default React.memo(AttributionControl);","map":{"version":3,"names":["React","useEffect","applyReactStyle","useControl","AttributionControl","props","ctrl","_ref","mapLib","position","_container","style","memo"],"sources":["/Users/afian/Documents/node_apps/h3js_hexagons/node_modules/react-map-gl/src/components/attribution-control.ts"],"sourcesContent":["import * as React from 'react';\nimport {useEffect} from 'react';\nimport {applyReactStyle} from '../utils/apply-react-style';\nimport useControl from './use-control';\n\nimport type {ControlPosition, MapboxAttributionControl} from '../types';\n\nexport type AttributionControlProps = {\n  /**\n   * If true , force a compact attribution that shows the full attribution on mouse hover.\n   * If false , force the full attribution control. The default is a responsive attribution\n   * that collapses when the map is less than 640 pixels wide.  */\n  compact?: boolean;\n  /** String or strings to show in addition to any other attributions. */\n  customAttribution?: string | string[];\n  /** Placement of the control relative to the map. */\n  position?: ControlPosition;\n  /** CSS style override, applied to the control's container */\n  style?: React.CSSProperties;\n};\n\nfunction AttributionControl(props: AttributionControlProps): null {\n  const ctrl = useControl<MapboxAttributionControl>(\n    ({mapLib}) => new mapLib.AttributionControl(props),\n    {\n      position: props.position\n    }\n  );\n\n  useEffect(() => {\n    // @ts-ignore\n    applyReactStyle(ctrl._container, props.style);\n  }, [props.style]);\n\n  return null;\n}\n\nexport default React.memo(AttributionControl);\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAAQC,SAAS,QAAO,OAAO;AAC/B,SAAQC,eAAe,QAAO,4BAA4B;AAC1D,OAAOC,UAAU,MAAM,eAAe;AAkBtC,SAASC,kBAAkBA,CAACC,KAA8B;EACxD,MAAMC,IAAI,GAAGH,UAAU,CACrBI,IAAA;IAAA,IAAC;MAACC;IAAM,CAAC,GAAAD,IAAA;IAAA,OAAK,IAAIC,MAAM,CAACJ,kBAAkB,CAACC,KAAK,CAAC;EAAA,GAClD;IACEI,QAAQ,EAAEJ,KAAK,CAACI;GACjB,CACF;EAEDR,SAAS,CAAC,MAAK;IACb;IACAC,eAAe,CAACI,IAAI,CAACI,UAAU,EAAEL,KAAK,CAACM,KAAK,CAAC;EAC/C,CAAC,EAAE,CAACN,KAAK,CAACM,KAAK,CAAC,CAAC;EAEjB,OAAO,IAAI;AACb;AAEA,eAAeX,KAAK,CAACY,IAAI,CAACR,kBAAkB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}