{"ast":null,"code":"var _jsxFileName = \"/Users/afian/Documents/node_apps/h3js-learning/src/components/MapBoxMultipleHex.jsx\",\n  _s = $RefreshSig$();\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport Map, { Layer, Source, MapRef, Marker } from \"react-map-gl\";\nimport React, { useRef, useState } from \"react\";\nimport { cellToBoundary } from \"h3-js\";\nimport Papa from \"papaparse\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MapBox() {\n  _s();\n  const [arr, setArr] = useState([]);\n  const hexindex7Id = \"8744a1024ffffff\";\n  const onLoad = () => {\n    // console.log(\"onLoad() called\");\n    getData();\n  };\n  async function getData() {\n    const response = await fetch(\"./assets/miami_hexagons.csv\");\n\n    // console.log(response);\n\n    if (response) {\n      var _response$body;\n      const reader = response === null || response === void 0 ? void 0 : (_response$body = response.body) === null || _response$body === void 0 ? void 0 : _response$body.getReader();\n      const result = await (reader === null || reader === void 0 ? void 0 : reader.read()); // raw array\n\n      const decoder = new TextDecoder(\"utf-8\");\n      const csv = decoder.decode(result === null || result === void 0 ? void 0 : result.value); // the csv text\n      const results = Papa.parse(csv, {\n        header: true\n      }); // object with { data, errors, meta }\n\n      // console.log(results);\n\n      const rows = results.data; // array of objects\n      // console.log(rows);\n      const rs = rows.map(row => {\n        const style = getStyle(row);\n        return {\n          type: \"Feature\",\n          properties: {\n            id: row.hexindex7\n          },\n          geometry: {\n            type: \"Polygon\",\n            coordinates: [cellToBoundary(row.hexindex7, true)]\n          }\n        };\n      });\n      setArr(rs);\n\n      // console.log(rs);\n    }\n  }\n\n  const getStyle = row => {\n    const prediction = Math.floor(Math.random() * 10);\n    if (Number(prediction) < 2) {\n      return {\n        color: '#FEDD87',\n        opacity: 0.4\n      };\n    }\n    if (Number(prediction) < 5) {\n      return {\n        color: \"#FC9653\",\n        opacity: 0.5\n      };\n    }\n    if (Number(prediction) < 7) {\n      return {\n        color: \"#F77645\",\n        opacity: 0.6\n      };\n    }\n    return {\n      color: \"#E14C48\",\n      opacity: 0.7\n    };\n  };\n\n  // console.log(cellToBoundary(hexindex7Id, true));\n  console.log(\"arr:\");\n  console.log(arr);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map\",\n      children: /*#__PURE__*/_jsxDEV(Map, {\n        initialViewState: {\n          latitude: 25.917150273102553,\n          longitude: -80.11504281788082,\n          zoom: 10,\n          bearing: 0,\n          pitch: 0\n        },\n        mapStyle: \"mapbox://styles/mapbox/light-v9\",\n        mapboxAccessToken: \"pk.eyJ1IjoidGhlcHJvZiIsImEiOiJja3Q5amlqaXgxNjUwMm5wY3NrdmplbzVxIn0.C3zhU7lekidOJmARhNyBdw\",\n        style: {\n          height: \"100vh\",\n          width: \"100vw\"\n        },\n        onLoad: onLoad,\n        children: /*#__PURE__*/_jsxDEV(Source, {\n          type: \"geojson\",\n          data: {\n            type: \"FeatureCollection\",\n            features: arr\n          },\n          children: /*#__PURE__*/_jsxDEV(Layer, {\n            id: \"polyline-layer\",\n            type: \"fill\",\n            paint: {\n              'fill-outline-color': 'white',\n              \"fill-color\": \"#E14C48\",\n              \"fill-opacity\": 0.7\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 7\n  }, this);\n}\n_s(MapBox, \"zmPalv707NYovRiy5jMUzgJ2zEQ=\");\n_c = MapBox;\n;\nexport default MapBox;\nvar _c;\n$RefreshReg$(_c, \"MapBox\");","map":{"version":3,"names":["Map","Layer","Source","MapRef","Marker","React","useRef","useState","cellToBoundary","Papa","jsxDEV","_jsxDEV","MapBox","_s","arr","setArr","hexindex7Id","onLoad","getData","response","fetch","_response$body","reader","body","getReader","result","read","decoder","TextDecoder","csv","decode","value","results","parse","header","rows","data","rs","map","row","style","getStyle","type","properties","id","hexindex7","geometry","coordinates","prediction","Math","floor","random","Number","color","opacity","console","log","children","className","initialViewState","latitude","longitude","zoom","bearing","pitch","mapStyle","mapboxAccessToken","height","width","features","paint","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/afian/Documents/node_apps/h3js-learning/src/components/MapBoxMultipleHex.jsx"],"sourcesContent":["import \"mapbox-gl/dist/mapbox-gl.css\";\nimport Map, { Layer, Source, MapRef, Marker } from \"react-map-gl\";\nimport React, {useRef, useState } from \"react\";\nimport { cellToBoundary } from \"h3-js\";\nimport Papa from \"papaparse\";\n\n\nfunction MapBox() {\n\n  const [arr, setArr] = useState([]);\n\n  const hexindex7Id = \"8744a1024ffffff\";\n\n  const onLoad = () => {\n    // console.log(\"onLoad() called\");\n    getData();\n  };\n  \n\n  async function getData() {\n    const response = await fetch(\"./assets/miami_hexagons.csv\");\n\n    // console.log(response);\n\n    if (response) {\n      const reader = response?.body?.getReader();\n      const result = await reader?.read(); // raw array\n\n\n\n      const decoder = new TextDecoder(\"utf-8\");\n      const csv = decoder.decode(result?.value); // the csv text\n      const results = Papa.parse(csv, { header: true }); // object with { data, errors, meta }\n\n      // console.log(results);\n\n      const rows = results.data; // array of objects\n      // console.log(rows);\n      const rs = rows.map((row) => {\n        const style = getStyle(row);\n        return {\n          type: \"Feature\",\n          properties: {\n            id: row.hexindex7,\n          },\n          geometry: {\n            type: \"Polygon\",\n            coordinates: [cellToBoundary(row.hexindex7, true)],\n          },\n        };\n      });\n      setArr(rs);\n\n      // console.log(rs);\n    }\n  }\n\n  const getStyle = (row) => {\n    const prediction = Math.floor(Math.random() * 10);\n\n    if (Number(prediction) < 2) {\n      return {\n        color: '#FEDD87',\n        opacity: 0.4,\n      }\n    }\n    if (Number(prediction) < 5) {\n      return {\n        color: \"#FC9653\",\n        opacity: 0.5,\n      };\n    }\n    if (Number(prediction) < 7) {\n      return {\n        color: \"#F77645\",\n        opacity: 0.6\n      }\n    }\n    return {\n      color: \"#E14C48\",\n      opacity: 0.7\n    };\n  };\n\n  // console.log(cellToBoundary(hexindex7Id, true));\n  console.log(\"arr:\");\n  console.log(arr);\n\n\n\n  return (\n      \n      <div>\n        <div className=\"map\">\n          <Map\n            initialViewState={{\n              latitude: 25.917150273102553,\n              longitude: -80.11504281788082,\n              zoom: 10,\n              bearing: 0,\n              pitch: 0,\n            }}\n            mapStyle=\"mapbox://styles/mapbox/light-v9\"\n            mapboxAccessToken=\"pk.eyJ1IjoidGhlcHJvZiIsImEiOiJja3Q5amlqaXgxNjUwMm5wY3NrdmplbzVxIn0.C3zhU7lekidOJmARhNyBdw\"\n            style={{\n              height: \"100vh\",\n              width: \"100vw\",\n            }}\n            onLoad={onLoad}\n          >\n            <Source\n              type=\"geojson\"\n              data={{\n                type: \"FeatureCollection\",\n                features: arr\n              }}\n            >\n              <Layer\n                {...{\n                  id: \"polyline-layer\",\n                  type: \"fill\",\n                  paint: {\n                    'fill-outline-color': 'white',\n                    \"fill-color\": \"#E14C48\",\n                    \"fill-opacity\": 0.7,\n                  },\n                }}\n              />\n            </Source>\n            \n\n\n          </Map>\n        </div> \n      </div>\n  );\n\n};\n\nexport default MapBox;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}