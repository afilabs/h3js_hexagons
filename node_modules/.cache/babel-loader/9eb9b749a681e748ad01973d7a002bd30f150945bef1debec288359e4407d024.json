{"ast":null,"code":"import * as React from 'react';\nimport { useState, useCallback, useMemo, useContext } from 'react';\nimport { MapContext } from './map';\nexport const MountedMapsContext = React.createContext(null);\nexport const MapProvider = props => {\n  const [maps, setMaps] = useState({});\n  const onMapMount = useCallback(function (map) {\n    let id = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n    setMaps(currMaps => {\n      if (id === 'current') {\n        throw new Error(\"'current' cannot be used as map id\");\n      }\n      if (currMaps[id]) {\n        throw new Error(`Multiple maps with the same id: ${id}`);\n      }\n      return {\n        ...currMaps,\n        [id]: map\n      };\n    });\n  }, []);\n  const onMapUnmount = useCallback(function () {\n    let id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'default';\n    setMaps(currMaps => {\n      if (currMaps[id]) {\n        const nextMaps = {\n          ...currMaps\n        };\n        delete nextMaps[id];\n        return nextMaps;\n      }\n      return currMaps;\n    });\n  }, []);\n  return React.createElement(MountedMapsContext.Provider, {\n    value: {\n      maps,\n      onMapMount,\n      onMapUnmount\n    }\n  }, props.children);\n};\nexport function useMap() {\n  var _a;\n  const maps = (_a = useContext(MountedMapsContext)) === null || _a === void 0 ? void 0 : _a.maps;\n  const currentMap = useContext(MapContext);\n  const mapsWithCurrent = useMemo(() => {\n    return {\n      ...maps,\n      current: currentMap === null || currentMap === void 0 ? void 0 : currentMap.map\n    };\n  }, [maps, currentMap]);\n  return mapsWithCurrent;\n}","map":{"version":3,"names":["React","useState","useCallback","useMemo","useContext","MapContext","MountedMapsContext","createContext","MapProvider","props","maps","setMaps","onMapMount","map","id","arguments","length","undefined","currMaps","Error","onMapUnmount","nextMaps","createElement","Provider","value","children","useMap","_a","currentMap","mapsWithCurrent","current"],"sources":["/Users/afian/Documents/node_apps/h3js_hexagons/node_modules/react-map-gl/src/components/use-map.tsx"],"sourcesContent":["import * as React from 'react';\nimport {useState, useCallback, useMemo, useContext} from 'react';\n\nimport {MapRef} from '../mapbox/create-ref';\nimport {MapContext} from './map';\n\ntype MountedMapsContextValue = {\n  maps: {[id: string]: MapRef};\n  onMapMount: (map: MapRef, id: string) => void;\n  onMapUnmount: (id: string) => void;\n};\n\nexport const MountedMapsContext = React.createContext<MountedMapsContextValue>(null);\n\nexport const MapProvider: React.FC<{children?: React.ReactNode}> = props => {\n  const [maps, setMaps] = useState<{[id: string]: MapRef}>({});\n\n  const onMapMount = useCallback((map: MapRef, id: string = 'default') => {\n    setMaps(currMaps => {\n      if (id === 'current') {\n        throw new Error(\"'current' cannot be used as map id\");\n      }\n      if (currMaps[id]) {\n        throw new Error(`Multiple maps with the same id: ${id}`);\n      }\n      return {...currMaps, [id]: map};\n    });\n  }, []);\n\n  const onMapUnmount = useCallback((id: string = 'default') => {\n    setMaps(currMaps => {\n      if (currMaps[id]) {\n        const nextMaps = {...currMaps};\n        delete nextMaps[id];\n        return nextMaps;\n      }\n      return currMaps;\n    });\n  }, []);\n\n  return (\n    <MountedMapsContext.Provider\n      value={{\n        maps,\n        onMapMount,\n        onMapUnmount\n      }}\n    >\n      {props.children}\n    </MountedMapsContext.Provider>\n  );\n};\n\nexport function useMap(): {current?: MapRef; [id: string]: MapRef | undefined} {\n  const maps = useContext(MountedMapsContext)?.maps;\n  const currentMap = useContext(MapContext);\n\n  const mapsWithCurrent = useMemo(() => {\n    return {...maps, current: currentMap?.map};\n  }, [maps, currentMap]);\n\n  return mapsWithCurrent;\n}\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAAQC,QAAQ,EAAEC,WAAW,EAAEC,OAAO,EAAEC,UAAU,QAAO,OAAO;AAGhE,SAAQC,UAAU,QAAO,OAAO;AAQhC,OAAO,MAAMC,kBAAkB,GAAGN,KAAK,CAACO,aAAa,CAA0B,IAAI,CAAC;AAEpF,OAAO,MAAMC,WAAW,GAA2CC,KAAK,IAAG;EACzE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAyB,EAAE,CAAC;EAE5D,MAAMW,UAAU,GAAGV,WAAW,CAAC,UAACW,GAAW,EAA4B;IAAA,IAA1BC,EAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAa,SAAS;IACjEJ,OAAO,CAACO,QAAQ,IAAG;MACjB,IAAIJ,EAAE,KAAK,SAAS,EAAE;QACpB,MAAM,IAAIK,KAAK,CAAC,oCAAoC,CAAC;;MAEvD,IAAID,QAAQ,CAACJ,EAAE,CAAC,EAAE;QAChB,MAAM,IAAIK,KAAK,CAAC,mCAAmCL,EAAE,EAAE,CAAC;;MAE1D,OAAO;QAAC,GAAGI,QAAQ;QAAE,CAACJ,EAAE,GAAGD;MAAG,CAAC;IACjC,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,YAAY,GAAGlB,WAAW,CAAC,YAA2B;IAAA,IAA1BY,EAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAa,SAAS;IACtDJ,OAAO,CAACO,QAAQ,IAAG;MACjB,IAAIA,QAAQ,CAACJ,EAAE,CAAC,EAAE;QAChB,MAAMO,QAAQ,GAAG;UAAC,GAAGH;QAAQ,CAAC;QAC9B,OAAOG,QAAQ,CAACP,EAAE,CAAC;QACnB,OAAOO,QAAQ;;MAEjB,OAAOH,QAAQ;IACjB,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,OACElB,KAAA,CAAAsB,aAAA,CAAChB,kBAAkB,CAACiB,QAAQ;IAC1BC,KAAK,EAAE;MACLd,IAAI;MACJE,UAAU;MACVQ;;EACD,GAEAX,KAAK,CAACgB,QAAQ,CACa;AAElC,CAAC;AAED,OAAM,SAAUC,MAAMA,CAAA;;EACpB,MAAMhB,IAAI,GAAG,CAAAiB,EAAA,GAAAvB,UAAU,CAACE,kBAAkB,CAAC,cAAAqB,EAAA,uBAAAA,EAAA,CAAEjB,IAAI;EACjD,MAAMkB,UAAU,GAAGxB,UAAU,CAACC,UAAU,CAAC;EAEzC,MAAMwB,eAAe,GAAG1B,OAAO,CAAC,MAAK;IACnC,OAAO;MAAC,GAAGO,IAAI;MAAEoB,OAAO,EAAEF,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEf;IAAG,CAAC;EAC5C,CAAC,EAAE,CAACH,IAAI,EAAEkB,UAAU,CAAC,CAAC;EAEtB,OAAOC,eAAe;AACxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}